#PROP_text
type: string = "PROP"
version: u32 = 3
linked: list[string] = {}
entries: map[hash,embed] = {
    "Characters/SRUAP_Turret_Chaos1/CharacterRecords/Root" = CharacterRecord {
        mCharacterName: string = "SRUAP_Turret_Chaos1"
        targetLaserEffects: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "LaserSight_beam.troy"
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        0xcd11c337: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectKey: hash = 0x6e56283a
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        baseHP: f32 = 5000
        baseStaticHPRegen: f32 = 0
        healthBarHeight: f32 = 525
        healthBarFullParallax: bool = true
        primaryAbilityResource: embed = AbilityResourceSlotInfo {
            arBase: f32 = 0
            arBaseStaticRegen: f32 = 0
        }
        baseDamage: f32 = 152
        baseArmor: f32 = 15
        baseSpellBlock: f32 = 15
        baseMoveSpeed: f32 = 0
        attackRange: f32 = 750
        attackSpeed: f32 = 0.833000004
        attackSpeedRatio: f32 = 0.833000004
        attackSpeedPerLevel: f32 = 2.125
        basicAttack: embed = AttackSlotData {
            mAttackDelayCastOffsetPercent: option[f32] = {
                -0.160999998
            }
        }
        expGivenOnDeath: f32 = 0
        goldGivenOnDeath: f32 = 0
        localGoldGivenOnDeath: f32 = 250
        localGoldSplitWithLastHitter: bool = true
        globalGoldGivenOnDeath: f32 = 50
        name: string = "game_character_displayname_OrderTurretNormal"
        hitFxScale: f32 = 0.5
        selectionHeight: f32 = 200
        selectionRadius: f32 = 130
        pathfindingCollisionRadius: f32 = 125
        overrideGameplayCollisionRadius: option[f32] = {
            88.4000015
        }
        unitTagsString: string = "Structure | Structure_Turret | Structure_Turret_Outer"
        characterToolData: embed = characterToolData {
            mapAIPresence: map[u32,embed] = {
                0 = 0xd01d25c0 {}
                1 = 0xd01d25c0 {}
                2 = 0xd01d25c0 {}
            }
            description: string = "game_character_description_OrderTurretNormal"
        }
        mClientSideItemInventory: list[hash] = {
            "Items/1500"
            "Items/1502"
            "Items/1503"
            "Items/1501"
            "Items/1515"
            0xe5db7a5a
        }
        occludedUnitSelectableDistance: f32 = 500
    }
    "Characters/SRUAP_Turret_Chaos1/CharacterRecords/Tournament" = CharacterRecord {
        mCharacterName: string = "SRUAP_Turret_Chaos1"
        targetLaserEffects: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "LaserSight_beam.troy"
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        0xcd11c337: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectKey: hash = 0x6e56283a
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        baseHP: f32 = 5000
        baseStaticHPRegen: f32 = 0
        healthBarHeight: f32 = 525
        healthBarFullParallax: bool = true
        primaryAbilityResource: embed = AbilityResourceSlotInfo {
            arBase: f32 = 0
            arBaseStaticRegen: f32 = 0
        }
        baseDamage: f32 = 152
        baseArmor: f32 = 15
        baseSpellBlock: f32 = 15
        baseMoveSpeed: f32 = 0
        attackRange: f32 = 750
        attackSpeed: f32 = 0.833000004
        attackSpeedRatio: f32 = 0.833000004
        attackSpeedPerLevel: f32 = 2.125
        basicAttack: embed = AttackSlotData {
            mAttackDelayCastOffsetPercent: option[f32] = {
                -0.160999998
            }
        }
        expGivenOnDeath: f32 = 0
        goldGivenOnDeath: f32 = 0
        localGoldGivenOnDeath: f32 = 250
        localGoldSplitWithLastHitter: bool = true
        globalGoldGivenOnDeath: f32 = 50
        name: string = "game_character_displayname_OrderTurretNormal"
        hitFxScale: f32 = 0.5
        selectionHeight: f32 = 200
        selectionRadius: f32 = 130
        pathfindingCollisionRadius: f32 = 125
        overrideGameplayCollisionRadius: option[f32] = {
            88.4000015
        }
        unitTagsString: string = "Structure | Structure_Turret | Structure_Turret_Outer"
        characterToolData: embed = characterToolData {
            mapAIPresence: map[u32,embed] = {
                0 = 0xd01d25c0 {}
                1 = 0xd01d25c0 {}
                2 = 0xd01d25c0 {}
            }
            description: string = "game_character_description_OrderTurretNormal"
        }
        mClientSideItemInventory: list[hash] = {
            "Items/1500"
            "Items/1502"
            "Items/1503"
            "Items/1501"
            "Items/1515"
            "Items/1507"
        }
        occludedUnitSelectableDistance: f32 = 500
    }
    0x4b158351 = CharacterRecord {
        mCharacterName: string = "SRUAP_Turret_Chaos1"
        targetLaserEffects: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "LaserSight_beam.troy"
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        0xcd11c337: pointer = TargetLaserComponentEffects {
            beamEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectKey: hash = 0x6e56283a
                boneName: string = "joint2"
            }
            towerTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "Yikes-Tower.troy"
                boneName: string = "joint2"
            }
            champTargetingEffectDefinition: embed = SkinCharacterDataProperties_CharacterIdleEffect {
                effectName: string = "yikes-champ.troy"
                boneName: string = "C_Buffbone_Glb_Head_Loc"
            }
        }
        baseHP: f32 = 2150
        baseStaticHPRegen: f32 = 0
        healthBarHeight: f32 = 525
        healthBarFullParallax: bool = true
        primaryAbilityResource: embed = AbilityResourceSlotInfo {
            arBase: f32 = 0
            arBaseStaticRegen: f32 = 0
        }
        baseDamage: f32 = 152
        baseArmor: f32 = 60
        baseSpellBlock: f32 = 60
        baseMoveSpeed: f32 = 0
        attackRange: f32 = 750
        attackSpeed: f32 = 0.833000004
        attackSpeedRatio: f32 = 0.833000004
        attackSpeedPerLevel: f32 = 2.125
        basicAttack: embed = AttackSlotData {
            mAttackDelayCastOffsetPercent: option[f32] = {
                -0.160999998
            }
        }
        expGivenOnDeath: f32 = 0
        goldGivenOnDeath: f32 = 0
        localGoldGivenOnDeath: f32 = 275
        localGoldSplitWithLastHitter: bool = true
        globalGoldGivenOnDeath: f32 = 55
        name: string = "game_character_displayname_OrderTurretNormal"
        hitFxScale: f32 = 0.5
        selectionHeight: f32 = 200
        selectionRadius: f32 = 130
        pathfindingCollisionRadius: f32 = 125
        overrideGameplayCollisionRadius: option[f32] = {
            88.4000015
        }
        unitTagsString: string = "Structure | Structure_Turret | Structure_Turret_Outer"
        characterToolData: embed = characterToolData {
            mapAIPresence: map[u32,embed] = {
                0 = 0xd01d25c0 {}
                1 = 0xd01d25c0 {}
                2 = 0xd01d25c0 {}
            }
            description: string = "game_character_description_OrderTurretNormal"
        }
        mClientSideItemInventory: list[hash] = {
            "Items/1500"
            "Items/1502"
            "Items/1503"
            "Items/1501"
        }
        occludedUnitSelectableDistance: f32 = 500
    }
    "Characters/SRUAP_Turret_Chaos1/Spells/SRUAP_Turret_Chaos1BasicAttack" = SpellObject {
        mScriptName: string = "SRUAP_Turret_Chaos1BasicAttack"
        mSpell: pointer = SpellDataResource {
            mAffectsTypeFlags: u32 = 5375
            mAlternateName: string = "ChaosTurretWormBasicAttack"
            mAnimationName: string = "attack1"
            bHaveHitEffect: bool = true
            castConeDistance: f32 = 100
            mMissileSpec: pointer = MissileSpecification {
                movementComponent: pointer = FixedSpeedMovement {
                    mSpeed: f32 = 1200
                    mTargetHeightAugment: f32 = 100
                    mOffsetInitialTargetHeight: f32 = 100
                    mStartBoneName: string = "joint2"
                }
                verticalFacing: pointer = VeritcalFacingMatchVelocity {}
                behaviors: list[pointer] = {
                    CastOnMovementComplete {}
                    DestroyOnMovementComplete {}
                }
            }
            mCastType: u32 = 1
            castFrame: f32 = 4.94999981
            missileSpeed: f32 = 1200
            mMissileEffectKey: hash = 0xbbe8ac8d
            mMissileEffectPlayerKey: hash = 0xec78e399
            mHitEffectKey: hash = 0xd54314b5
            mHitEffectPlayerKey: hash = 0x93356291
            bHaveHitBone: bool = true
            mHitBoneName: string = "C_Buffbone_Glb_Chest_Loc"
            mClientData: embed = SpellDataResourceClient {
                mTargeterDefinitions: list[pointer] = {
                    TargeterDefinitionRange {
                        useCasterBoundingBox: option[bool] = {
                            false
                        }
                    }
                }
            }
        }
    }
    "Characters/SRUAP_Turret_Chaos1/Skins/Meta" = SkinCharacterMetaDataProperties {
        relativeColorSwapTable: list[i32] = {
            1
            1
            3
            4
            5
            5
            7
            7
            9
            9
            11
            10
        }
    }
}
